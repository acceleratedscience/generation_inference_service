{
    "service_type": "generate_data",
    "description": "Configuration to generate optimizied molecules using recurrent neural networks with hill climbing algorithm \n Note: This should be run on GPU as Timeouts will likely occur when running on CPU.",
    "target": {
        "title": "Scoring functions with parameters",
        "description": "Scoring functions will be used to generate a score for SMILES.",
        "type": "object"
    },
    "generator_type": {
        "algorithm_application": "SMILESLSTMPPOGenerator",
        "domain": "materials",
        "algorithm_name": "GuacaMolGenerator",
        "algorithm_type": "conditional_generation"
    },
    "algorithm_versions": [
        "v0"
    ],
    "service_name": "generate with SMILESLSTMPPOGenerator",
    "service_description": "",
    "valid_types": [
        "SMILESLSTMPPOGenerator"
    ],
    "type_description": {},
    "parameters": {
        "algorithm_version": {
            "title": "Algorithm Version",
            "default": "v0",
            "type": "string"
        },
        "batch_size": {
            "title": "Batch Size",
            "description": "Batch size used for the generative model sampling.",
            "default": 1,
            "type": "integer"
        },
        "num_epochs": {
            "title": "Num Epochs",
            "description": "number of epochs to sample",
            "default": 20,
            "type": "integer"
        },
        "episode_size": {
            "title": "Episode Size",
            "description": "number of molecules sampled by the policy at the start of a series of ppo updates",
            "default": 8192,
            "type": "integer"
        },
        "optimize_batch_size": {
            "title": "Optimize Batch Size",
            "description": "batch size for the optimization",
            "default": 1024,
            "type": "integer"
        },
        "entropy_weight": {
            "title": "Entropy Weight",
            "description": "used for calculating entropy loss",
            "default": 1,
            "type": "integer"
        },
        "kl_div_weight": {
            "title": "Kl Div Weight",
            "description": "used for calculating Kullback-Leibler divergence loss",
            "default": 10,
            "type": "integer"
        },
        "clip_param": {
            "title": "Clip Param",
            "description": "used for determining how far the new policy is from the old one",
            "default": 0.2,
            "type": "number"
        }
    },
    "required_parameters": [],
    "category": "generation",
    "sub_category": "generates",
    "wheel_package": "",
    "GPU": true,
    "persistent": true,
    "help": ""
}